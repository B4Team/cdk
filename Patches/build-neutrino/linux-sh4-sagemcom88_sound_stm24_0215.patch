diff -Nur stx7105_audio.c.orig stx7105_audio.c
--- a/drivers/stm/stx7105_audio.c.orig
+++ b/drivers/stm/stx7105_audio.c
@@ -32,16 +32,33 @@
 	}
 };
 
+/* Frequency synthesizers */
+
+static struct platform_device stx7105_fsynth = {
+	.name          = "snd_fsynth",
+	.id            = -1,
+	.num_resources = 1,
+	.resource      = (struct resource []) {
+		STM_PLAT_RESOURCE_MEM(0xfe210000, 0x50),
+	},
+	.dev.platform_data = &(struct snd_stm_fsynth_info) {
+		.ver = 5,
+		.channels_from = 0,
+		.channels_to = 2,
+	},
+};
+
 /* Internal DAC */
 
-static struct platform_device stx7105_conv_dac_mem = {
-	.name          = "snd_conv_dac_mem",
+static struct platform_device stx7105_conv_int_dac = {
+	.name          = "snd_conv_int_dac",
 	.id            = -1,
 	.num_resources = 1,
 	.resource      = (struct resource []) {
 		STM_PLAT_RESOURCE_MEM(0xfe210100, 0x4),
 	},
-	.dev.platform_data = &(struct snd_stm_conv_dac_mem_info) {
+	.dev.platform_data = &(struct snd_stm_conv_int_dac_info) {
+		.ver = 4,
 		.source_bus_id = "snd_pcm_player.1",
 		.channel_from = 0,
 		.channel_to = 1,
@@ -54,6 +71,8 @@
 	.name = "PCM player #0 (HDMI)",
 	.ver = 6,
 	.card_device = 0,
+	.fsynth_bus_id = "snd_fsynth",
+	.fsynth_output = 0,
 	.channels = 8,
 	.fdma_initiator = 0,
 	.fdma_request_line = 39,
@@ -100,6 +106,8 @@
 	.name = "PCM player #1",
 	.ver = 6,
 	.card_device = 1,
+	.fsynth_bus_id = "snd_fsynth",
+	.fsynth_output = 1,
 	.channels = 2,
 	.fdma_initiator = 0,
 	.fdma_request_line = 34,
@@ -144,6 +152,8 @@
 	.name = "SPDIF player (HDMI)",
 	.ver = 4,
 	.card_device = 2,
+	.fsynth_bus_id = "snd_fsynth",
+	.fsynth_output = 2,
 	.fdma_initiator = 0,
 	.fdma_request_line = 40,
 	/* .pad_config set by stx7105_configure_audio() */
@@ -278,7 +288,8 @@
 
 static struct platform_device *stx7105_audio_devices[] __initdata = {
 	&stx7105_glue,
-	&stx7105_conv_dac_mem,
+	&stx7105_fsynth,
+	&stx7105_conv_int_dac,
 	&stx7105_pcm_player_0,
 	&stx7105_pcm_player_1,
 	&stx7105_spdif_player,
@@ -314,24 +325,22 @@
 	BUG_ON(configured);
 	configured = 1;
 
+	if (config->pcm_player_0_output >
+			stx7105_pcm_player_0_output_disabled) {
+		int unused = 3 - config->pcm_player_0_output;
+
+		stx7105_pcm_player_0_info.pad_config =
+				&stx7105_pcm_player_0_pad_config;
+
+		stx7105_pcm_player_0_pad_config.gpios_num -= unused;
+	}
+
 	if (config->spdif_player_output_enabled)
 		stx7105_spdif_player_info.pad_config =
 				&stx7105_spdif_player_pad_config;
 
 	switch (cpu_data->type) {
 	case CPU_STX7105:
-		BUG_ON(config->pcm_player_0_output ==
-				stx7105_pcm_player_0_output_8_channels);
-		if (config->pcm_player_0_output >
-				stx7105_pcm_player_0_output_disabled) {
-			int unused = stx7105_pcm_player_0_output_6_channels -
-					config->pcm_player_0_output;
-
-			stx7105_pcm_player_0_info.pad_config =
-					&stx7105_pcm_player_0_pad_config;
-
-			stx7105_pcm_player_0_pad_config.gpios_num -= unused;
-		}
 		if (config->pcm_player_1_enabled)
 			stx7105_pcm_player_1_info.pad_config =
 					&stx7105_pcm_player_1_pad_config;
--- a/include/sound/stm.h.orig
+++ b/include/sound/stm.h
@@ -188,28 +188,29 @@
 
 
 /*
- * Internal audio DAC descriptions (platform data)
+ * Audio frequency synthesizer description (platform data)
  */
 
-struct snd_stm_conv_dac_mem_info {
-	const char *source_bus_id;
-	int channel_from, channel_to;
+struct snd_stm_fsynth_info {
+	int ver;
+
+	int channels_from, channels_to;
 };
 
-struct snd_stm_conv_dac_sc_info {
+
+
+/*
+ * Internal audio DAC description (platform data)
+ */
+
+struct snd_stm_conv_int_dac_info {
+	int ver;
+
 	const char *source_bus_id;
 	int channel_from, channel_to;
-
-	struct {
-		int group;
-		int num;
-		int lsb;
-		int msb;
-	} nrst, mode, nsb, softmute, pdana, pndbg;
 };
 
 
-
 /*
  * I2S to SPDIF converter description (platform data)
  */
@@ -232,6 +233,8 @@
 	int ver;
 
 	int card_device;
+	const char *fsynth_bus_id;
+	int fsynth_output;
 
 	unsigned int channels;
 
@@ -272,6 +275,8 @@
 	int ver;
 
 	int card_device;
+	const char *fsynth_bus_id;
+	int fsynth_output;
 
 	unsigned char fdma_initiator;
 	unsigned int fdma_request_line;
